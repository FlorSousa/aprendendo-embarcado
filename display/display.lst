CCS PCM C Compiler, Version 5.015, 5967               21-nov-22 00:19

               Filename:   C:\Users\jhona\aprendendo-embarcado\display\display.lst

               ROM used:   75 words (4%)
                           Largest free fragment is 1973
               RAM used:   16 (7%) at main() level
                           16 (7%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16F628A.h> 
.................... //////////// Standard Header file for the PIC16F628A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F628A 
....................  
.................... #list 
....................  
.................... #fuses XT, NOWDT, NOPROTECT, NOPUT 
.................... #use delay(clock=4MHz) 
0004:  MOVLW  2B
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  GOTO   040 (RETURN)
....................  
.................... void main(){ 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  MOVLW  07
001D:  MOVWF  1F
001E:  BCF    03.7
*
0031:  CLRF   2A
....................     /* 
....................         B0 g 
....................         B1 f 
....................         B2 a 
....................         B3 b 
....................         B4 define qual display vai trabalhar 
....................         B5 c 
....................         B6 d 
....................         B7 e 
....................     */ 
....................     int numbers[9] = {0b11101110,0b00101000,0b11001101,0b01101101,0b00101011,0b01100111,0b11100111,0b00101100,0b11101111}; 
*
001F:  MOVLW  EE
0020:  MOVWF  21
0021:  MOVLW  28
0022:  MOVWF  22
0023:  MOVLW  CD
0024:  MOVWF  23
0025:  MOVLW  6D
0026:  MOVWF  24
0027:  MOVLW  2B
0028:  MOVWF  25
0029:  MOVLW  67
002A:  MOVWF  26
002B:  MOVLW  E7
002C:  MOVWF  27
002D:  MOVLW  2C
002E:  MOVWF  28
002F:  MOVLW  EF
0030:  MOVWF  29
....................     int i = 0; 
....................     while (true){ 
....................         output_b(numbers[i]); 
*
0032:  MOVLW  21
0033:  ADDWF  2A,W
0034:  MOVWF  04
0035:  BCF    03.7
0036:  MOVF   00,W
0037:  MOVWF  2B
0038:  BSF    03.5
0039:  CLRF   06
003A:  BCF    03.5
003B:  MOVF   2B,W
003C:  MOVWF  06
....................         delay_ms(200);  
003D:  MOVLW  C8
003E:  MOVWF  2B
003F:  GOTO   004
....................         i = i<8? i+1 : 0; 
0040:  MOVF   2A,W
0041:  SUBLW  07
0042:  BTFSS  03.0
0043:  GOTO   047
0044:  MOVLW  01
0045:  ADDWF  2A,W
0046:  GOTO   048
0047:  MOVLW  00
0048:  MOVWF  2A
0049:  GOTO   032
....................     } 
.................... } 
004A:  SLEEP

Configuration Fuses:
   Word  1: 3F69   NOWDT NOPUT XT MCLR BROWNOUT NOLVP NOCPD NOPROTECT
